#!/usr/bin/env dash
# shellcheck source=/dev/null
#
# Copyright (C) 2020 Raphielscape LLC.
#
# Licensed under the Raphielscape Public License, Version 1.0 (the "License");
# you may not use this file except in compliance with the License.
#
# Telegram command container

TELEGRAM=$SEMAPHORE_PROJECT_DIR/init/telegramapi
export TELEGRAM
# Caster configurations
MAINGROUP_ID="-1001460242671"

# sendcast to group
tg_sendinfo() {
    "${TELEGRAM}" -c ${MAINGROUP_ID} -H \
    "$(
		for POST in "${@}"; do
			echo "${POST}"
		done
    )" \
    -t $BOT_API_KEY
}

kickstart_pub() {
  if [ ! -z "$PULL_REQUEST_NUMBER" ]; then
     tg_sendinfo "I am starting build" \
     "PR: <code>${PULL_REQUEST_NUMBER}</code>" \
     "Commit Point <code>${COMMIT_POINT}</code>" \
     " " \
     "<b>Github Link: </b> https://github.com/aone-id/aone-kangbot/commit/${COMMIT_HASH}"
  else
    tg_sendinfo "I am starting build" \
    "Branch <code>${PARSE_BRANCH}</code>" \
    "Commit Point <code>${COMMIT_POINT}</code>" \
    " " \
    "<b>Github Link: </b> https://github.com/aone-id/aone-kangbot/commit/${COMMIT_HASH}" \
    " " \
    "<b>CI Link: </b> https://semaphoreci.com/baalajimaestro/telegram-userbot"
}

kickstart_priv() {
    tg_buildmain_sendgif

    tg_debugcast "Compiler <code>${COMPILER_USED}</code>" \
    "Device <b>${DEVICE}</b>" \
    "Branch <code>${PARSE_BRANCH}</code>" \
    "Commit Point <code>${COMMIT_POINT}</code>" \
    "Under <code>$(hostname)</code>" \
    "Started on <code>$(whoami)</code>"

    tg_debugcast "This ${COMPILER_USED} build will not producing any binaries" \
                "This is internal build"
}
